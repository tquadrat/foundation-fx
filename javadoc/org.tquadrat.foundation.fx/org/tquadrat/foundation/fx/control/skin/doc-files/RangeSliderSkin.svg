
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='1345.000'
     height='1666.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='612.000'
                  width='844.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.fx.control.skin.RangeSliderSkin'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='844.000'
                          height='612.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='844.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='377.000'
                          y='13.000'>RangeSliderSkin</text>
                    <line x1='0.000'
                          y1='232.000'
                          x2='844.000'
                          y2='232.000'
                          class='separator'/>
                    <text y='30.000'>- m_CurrentFocus:org.tquadrat.foundation.fx.control.skin.RangeSliderSkin.FocusedChild</text>
                    <text y='41.000'>- m_HighThumb:org.tquadrat.foundation.fx.control.skin.RangeSliderSkin.ThumbPane</text>
                    <text y='52.000'>- m_LowThumb:org.tquadrat.foundation.fx.control.skin.RangeSliderSkin.ThumbPane</text>
                    <text y='63.000'>- m_LowThumbPos:double</text>
                    <text y='74.000'>- m_Orientation:javafx.geometry.Orientation</text>
                    <text y='85.000'>- m_PreDragPos:double</text>
                    <text y='96.000'>- m_PreDragThumbPoint:javafx.geometry.Point2D</text>
                    <text y='107.000'>- m_RangeBar:javafx.scene.layout.StackPane</text>
                    <text y='118.000'>- m_RangeEnd:double</text>
                    <text y='129.000'>- m_RangeStart:double</text>
                    <text y='140.000'>- m_SelectedValue:javafx.util.Callback&lt;java.lang.Void,org.tquadrat.foundation.fx.control.skin.RangeSliderSkin.FocusedChild&gt;</text>
                    <text y='151.000'>- m_ShowTickMarks:boolean</text>
                    <text y='162.000'>- m_ThumbHeight:double</text>
                    <text y='173.000'>- m_ThumbWidth:double</text>
                    <text y='184.000'>- m_TickLine:javafx.scene.chart.NumberAxis</text>
                    <text y='195.000'>- m_Track:javafx.scene.layout.StackPane</text>
                    <text y='206.000'>- m_TrackLength:double</text>
                    <text y='217.000'>- m_TrackStart:double</text>
                    <text y='228.000'>- m_TrackToTickGap:double</text>
                    <text x='5.000'
                          y='245.000'>+ RangeSliderSkin(control:org.tquadrat.foundation.fx.control.RangeSlider)</text>
                    <text x='5.000'
                          y='256.000'>- computeIncrement():double</text>
                    <text x='5.000'
                          y='267.000'># computeMaxHeight(width:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='278.000'># computeMaxWidth(height:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='289.000'># computeMinHeight(width:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='300.000'># computeMinWidth(height:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='311.000'># computePrefHeight(width:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='322.000'># computePrefWidth(height:double,topInset:double,rightInset:double,bottomInset:double,leftInset:double):double</text>
                    <text x='5.000'
                          y='333.000'>- confirmRange():void</text>
                    <text x='5.000'
                          y='344.000'>- decrementValue():void</text>
                    <text x='5.000'
                          y='355.000'>- end():void</text>
                    <text x='5.000'
                          y='366.000'>- getMaxMinusMinNoZero():double</text>
                    <text x='5.000'
                          y='377.000'>- highThumbDragged(ignoredMouseEvent:javafx.scene.input.MouseEvent,position:double):void</text>
                    <text x='5.000'
                          y='388.000'>- highThumbPressed(ignoredMouseEvent:javafx.scene.input.MouseEvent,ignoredPosition:double):void</text>
                    <text x='5.000'
                          y='399.000'>- highThumbReleased(mouseEvent:javafx.scene.input.MouseEvent):void</text>
                    <text x='5.000'
                          y='410.000'>- home():void</text>
                    <text x='5.000'
                          y='421.000'>- incrementValue():void</text>
                    <text x='5.000'
                          y='432.000'>- initHighThumb():void</text>
                    <text x='5.000'
                          y='443.000'>- initLowThumb():void</text>
                    <text x='5.000'
                          y='454.000'>- initRangeBar():void</text>
                    <text x='5.000'
                          y='465.000'>- isHorizontal():boolean</text>
                    <text x='5.000'
                          y='476.000'># layoutChildren(contentX:double,contentY:double,contentWidth:double,contentHeight:double):void</text>
                    <text x='5.000'
                          y='487.000'>+ lowThumbDragged(ignoredMouseEvent:javafx.scene.input.MouseEvent,position:double):void</text>
                    <text x='5.000'
                          y='498.000'>+ lowThumbPressed(ignoredMouseEvent:javafx.scene.input.MouseEvent,ignoredPosition:double):void</text>
                    <text x='5.000'
                          y='509.000'>+ lowThumbReleased(mouseEvent:javafx.scene.input.MouseEvent):void</text>
                    <text x='5.000'
                          y='520.000'>- minTrackLength():double</text>
                    <text x='5.000'
                          y='531.000'>- moveRange(position:double):void</text>
                    <text x='5.000'
                          y='542.000'>- positionHighThumb():void</text>
                    <text x='5.000'
                          y='553.000'>- positionLowThumb():void</text>
                    <text x='5.000'
                          y='564.000'>- rtl(node:org.tquadrat.foundation.fx.control.RangeSlider,rtlMethod:java.lang.Runnable,nonRtlMethod:java.lang.Runnable):void</text>
                    <text x='5.000'
                          y='575.000'>- setSelectedValue(callback:javafx.util.Callback&lt;java.lang.Void,org.tquadrat.foundation.fx.control.skin.RangeSliderSkin.FocusedChild&gt;):void</text>
                    <text x='5.000'
                          y='586.000'>- setShowTickMarks(ticksVisible:boolean,labelsVisible:boolean):void</text>
                    <text x='5.000'
                          y='597.000'>- snapValueToTicks(calculatedPosition:double):double</text>
                    <text x='5.000'
                          y='608.000'>- trackPress(ignoredMouseEvent:javafx.scene.input.MouseEvent,position:double):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='524.000'
                  width='1270.000'
                  x='0.000'
                  y='8.000'/>
        </clipPath>
        <symbol id='javafx.scene.control.SkinBase'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='8.000'
                          width='1270.000'
                          height='524.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='36.000'
                          x2='1270.000'
                          y2='36.000'
                          class='separator'/>
                    <text x='620.600'
                          y='21.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='611.000'
                          y='32.000'
                          class='abstract'>SkinBase</text>
                    <line x1='0.000'
                          y1='53.000'
                          x2='1270.000'
                          y2='53.000'
                          class='separator'/>
                    <text x='5.000'
                          y='49.000'>&#x2026;</text>
                    <text x='5.000'
                          y='66.000'># SkinBase(arg0:C)</text>
                    <text x='5.000'
                          y='77.000'>+ getSkinnable():C</text>
                    <text x='5.000'
                          y='88.000'>+ getNode():javafx.scene.Node</text>
                    <text x='5.000'
                          y='99.000'>+ dispose():void</text>
                    <text x='5.000'
                          y='110.000'>+ getChildren():javafx.collections.ObservableList&lt;javafx.scene.Node&gt;</text>
                    <text x='5.000'
                          y='121.000'># layoutChildren(arg0:double,arg1:double,arg2:double,arg3:double):void</text>
                    <text x='5.000'
                          y='132.000'># consumeMouseEvents(arg0:boolean):void</text>
                    <text x='5.000'
                          y='143.000'># registerChangeListener(arg0:javafx.beans.value.ObservableValue&lt;?&gt;,arg1:java.util.function.Consumer&lt;javafx.beans.value.ObservableValue&lt;?&gt;&gt;):void</text>
                    <text x='5.000'
                          y='154.000'># unregisterChangeListeners(arg0:javafx.beans.value.ObservableValue&lt;?&gt;):java.util.function.Consumer&lt;javafx.beans.value.ObservableValue&lt;?&gt;&gt;</text>
                    <text x='5.000'
                          y='165.000'># registerInvalidationListener(arg0:javafx.beans.Observable,arg1:java.util.function.Consumer&lt;javafx.beans.Observable&gt;):void</text>
                    <text x='5.000'
                          y='176.000'># unregisterInvalidationListeners(arg0:javafx.beans.Observable):java.util.function.Consumer&lt;javafx.beans.Observable&gt;</text>
                    <text x='5.000'
                          y='187.000'># registerListChangeListener(arg0:javafx.collections.ObservableList&lt;?&gt;,arg1:java.util.function.Consumer&lt;javafx.collections.ListChangeListener.Change&lt;?&gt;&gt;):void</text>
                    <text x='5.000'
                          y='198.000'># unregisterListChangeListeners(arg0:javafx.collections.ObservableList&lt;?&gt;):java.util.function.Consumer&lt;javafx.collections.ListChangeListener.Change&lt;?&gt;&gt;</text>
                    <text x='5.000'
                          y='209.000'># computeMinWidth(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='220.000'># computeMinHeight(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='231.000'># computeMaxWidth(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='242.000'># computeMaxHeight(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='253.000'># computePrefWidth(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='264.000'># computePrefHeight(arg0:double,arg1:double,arg2:double,arg3:double,arg4:double):double</text>
                    <text x='5.000'
                          y='275.000'># computeBaselineOffset(arg0:double,arg1:double,arg2:double,arg3:double):double</text>
                    <text x='5.000'
                          y='286.000'># snappedTopInset():double</text>
                    <text x='5.000'
                          y='297.000'># snappedBottomInset():double</text>
                    <text x='5.000'
                          y='308.000'># snappedLeftInset():double</text>
                    <text x='5.000'
                          y='319.000'># snappedRightInset():double</text>
                    <text x='5.000'
                          y='330.000'># snapSpace(arg0:double):double</text>
                    <text x='5.000'
                          y='341.000'># snapSpaceX(arg0:double):double</text>
                    <text x='5.000'
                          y='352.000'># snapSpaceY(arg0:double):double</text>
                    <text x='5.000'
                          y='363.000'># snapSize(arg0:double):double</text>
                    <text x='5.000'
                          y='374.000'># snapSizeX(arg0:double):double</text>
                    <text x='5.000'
                          y='385.000'># snapSizeY(arg0:double):double</text>
                    <text x='5.000'
                          y='396.000'># snapPosition(arg0:double):double</text>
                    <text x='5.000'
                          y='407.000'># snapPositionX(arg0:double):double</text>
                    <text x='5.000'
                          y='418.000'># snapPositionY(arg0:double):double</text>
                    <text x='5.000'
                          y='429.000'># positionInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.HPos,arg7:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='440.000'># positionInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:javafx.geometry.HPos,arg8:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='451.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.HPos,arg7:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='462.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:javafx.geometry.HPos,arg8:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='473.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:boolean,arg8:boolean,arg9:javafx.geometry.HPos,arg10:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='484.000'
                          class='static'>+ getClassCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='495.000'>+ getCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='506.000'>+ pseudoClassStateChanged(arg0:javafx.css.PseudoClass,arg1:boolean):void</text>
                    <text x='5.000'
                          y='517.000'># queryAccessibleAttribute(arg0:javafx.scene.AccessibleAttribute,arg1:java.lang.Object&#x2026;):java.lang.Object</text>
                    <text x='5.000'
                          y='528.000'># executeAccessibleAction(arg0:javafx.scene.AccessibleAction,arg1:java.lang.Object&#x2026;):void</text>
                </g>
                <g transform='translate(1245.000 0.000)'>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='template'/>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='externalClass'
                          stroke='none'
                          stroke-opacity='0.0'/>
                    <text x='5.000'
                          y='14.000'>C</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000004'>
            <rect class='externalClass'
                  height='95.000'
                  width='184.000'
                  x='0.000'
                  y='8.000'/>
        </clipPath>
        <symbol id='javafx.scene.control.Skin'>
            <g>
                <g clip-path='url(#ID000004)'>
                    <rect x='0.000'
                          y='8.000'
                          width='184.000'
                          height='95.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='36.000'
                          x2='184.000'
                          y2='36.000'
                          class='separator'/>
                    <text x='65.600'
                          y='21.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='80.000'
                          y='32.000'
                          class='abstract'>Skin</text>
                    <line x1='0.000'
                          y1='53.000'
                          x2='184.000'
                          y2='53.000'
                          class='separator'/>
                    <text x='5.000'
                          y='49.000'/>
                    <text x='5.000'
                          y='66.000'
                          class='abstract'>+ getSkinnable():C</text>
                    <text x='5.000'
                          y='77.000'
                          class='abstract'>+ getNode():javafx.scene.Node</text>
                    <text x='5.000'
                          y='88.000'>&#x2A22; install():void</text>
                    <text x='5.000'
                          y='99.000'
                          class='abstract'>+ dispose():void</text>
                </g>
                <g transform='translate(159.000 0.000)'>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='template'/>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='externalClass'
                          stroke='none'
                          stroke-opacity='0.0'/>
                    <text x='5.000'
                          y='14.000'>C</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M672.500,929.000 c0.000,-85.000,-12.500,0.000,-12.500,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M635.000,305.000 c0.000,-93.000,-298.750,0.000,-298.750,-93.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M685.000,305.000 c0.000,-162.000,311.250,0.000,311.250,-162.000 v-15'
          marker-end='url(#implementation)'/>
    <use x='214.250'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='904.250'
         y='25.000'
         xlink:href='#javafx.scene.control.Skin'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#javafx.scene.control.SkinBase'/>
    <use x='250.500'
         y='929.000'
         xlink:href='#org.tquadrat.foundation.fx.control.skin.RangeSliderSkin'/>
</svg>