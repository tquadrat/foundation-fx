
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='2112.000'
     height='7388.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='854.000'
                  width='694.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.fx.control.RangeSlider'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='694.000'
                          height='854.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='694.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='314.000'
                          y='13.000'>RangeSlider</text>
                    <line x1='0.000'
                          y1='210.000'
                          x2='694.000'
                          y2='210.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ DEFAULT_STYLE_CLASS:java.lang.String</text>
                    <text y='41.000'
                          class='final'>- m_BlockIncrementProperty:javafx.css.StyleableDoubleProperty</text>
                    <text y='52.000'
                          class='final'>- m_HighValueChangingProperty:javafx.beans.property.BooleanProperty</text>
                    <text y='63.000'
                          class='final'>- m_HighValueProperty:javafx.beans.property.DoubleProperty</text>
                    <text y='74.000'
                          class='final'>- m_LowValueChangingProperty:javafx.beans.property.BooleanProperty</text>
                    <text y='85.000'
                          class='final'>- m_LowValueProperty:javafx.beans.property.DoubleProperty</text>
                    <text y='96.000'
                          class='final'>- m_MajorTickUnitProperty:javafx.css.StyleableDoubleProperty</text>
                    <text y='107.000'
                          class='final'>- m_MaxProperty:javafx.beans.property.DoubleProperty</text>
                    <text y='118.000'
                          class='final'>- m_MinorTickCountProperty:javafx.css.StyleableIntegerProperty</text>
                    <text y='129.000'
                          class='final'>- m_MinProperty:javafx.beans.property.DoubleProperty</text>
                    <text y='140.000'
                          class='final'>- m_OrientationProperty:javafx.css.StyleableObjectProperty&lt;javafx.geometry.Orientation&gt;</text>
                    <text y='151.000'
                          class='final'>- m_ShowTickLabelsProperty:javafx.css.StyleableBooleanProperty</text>
                    <text y='162.000'
                          class='final'>- m_ShowTickMarksProperty:javafx.css.StyleableBooleanProperty</text>
                    <text y='173.000'
                          class='final'>- m_SnapToTicksProperty:javafx.css.StyleableBooleanProperty</text>
                    <text y='184.000'
                          class='final'>- m_TickLabelFormatterProperty:javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;java.lang.Number&gt;&gt;</text>
                    <text y='195.000'
                          class='static final'>- HORIZONTAL_PSEUDOCLASS_STATE:javafx.css.PseudoClass</text>
                    <text y='206.000'
                          class='static final'>- VERTICAL_PSEUDOCLASS_STATE:javafx.css.PseudoClass</text>
                    <text x='5.000'
                          y='223.000'>+ RangeSlider()</text>
                    <text x='5.000'
                          y='234.000'>+ RangeSlider(min:double,max:double,lowValue:double,highValue:double)</text>
                    <text x='5.000'
                          y='245.000'>+ adjustHighValue(newHigh:double):void</text>
                    <text x='5.000'
                          y='256.000'>- adjustHighValues():void</text>
                    <text x='5.000'
                          y='267.000'>+ adjustLowValue(newLow:double):void</text>
                    <text x='5.000'
                          y='278.000'>- adjustLowValues():void</text>
                    <text x='5.000'
                          y='289.000'>- adjustValues():void</text>
                    <text x='5.000'
                          y='300.000'>+ blockIncrementProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='311.000'># createDefaultSkin():javafx.scene.control.Skin&lt;?&gt;</text>
                    <text x='5.000'
                          y='322.000'>+ decrementHighValue():void</text>
                    <text x='5.000'
                          y='333.000'>+ decrementLowValue():void</text>
                    <text x='5.000'
                          y='344.000'>+ getBlockIncrement():double</text>
                    <text x='5.000'
                          y='355.000'
                          class='static'>+ getClassCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='366.000'>+ getControlCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='377.000'>+ getHighValue():double</text>
                    <text x='5.000'
                          y='388.000'>+ getLabelFormatter():javafx.util.StringConverter&lt;java.lang.Number&gt;</text>
                    <text x='5.000'
                          y='399.000'>+ getLowValue():double</text>
                    <text x='5.000'
                          y='410.000'>+ getMajorTickUnit():double</text>
                    <text x='5.000'
                          y='421.000'>+ getMax():double</text>
                    <text x='5.000'
                          y='432.000'>+ getMin():double</text>
                    <text x='5.000'
                          y='443.000'>+ getMinorTickCount():int</text>
                    <text x='5.000'
                          y='454.000'>+ getOrientation():javafx.geometry.Orientation</text>
                    <text x='5.000'
                          y='465.000'>+ getUserAgentStylesheet():java.lang.String</text>
                    <text x='5.000'
                          y='476.000'>+ highValueChangingProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='487.000'>+ highValueProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='498.000'>+ incrementHighValue():void</text>
                    <text x='5.000'
                          y='509.000'>+ incrementLowValue():void</text>
                    <text x='5.000'
                          y='520.000'>+ isHighValueChanging():boolean</text>
                    <text x='5.000'
                          y='531.000'>+ isLowValueChanging():boolean</text>
                    <text x='5.000'
                          y='542.000'>+ isShowTickLabels():boolean</text>
                    <text x='5.000'
                          y='553.000'>+ isShowTickMarks():boolean</text>
                    <text x='5.000'
                          y='564.000'>+ isSnapToTicks():boolean</text>
                    <text x='5.000'
                          y='575.000'>+ labelFormatterProperty():javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;java.lang.Number&gt;&gt;</text>
                    <text x='5.000'
                          y='586.000'>+ lowValueChangingProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='597.000'>+ lowValueProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='608.000'>+ majorTickUnitProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='619.000'>+ maxProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='630.000'>+ minorTickCountProperty():javafx.beans.property.IntegerProperty</text>
                    <text x='5.000'
                          y='641.000'>+ minProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='652.000'>+ orientationProperty():javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;</text>
                    <text x='5.000'
                          y='663.000'>+ setBlockIncrement(value:double):void</text>
                    <text x='5.000'
                          y='674.000'>+ setHighValueChanging(flag:boolean):void</text>
                    <text x='5.000'
                          y='685.000'>+ setHighValue(high:double):void</text>
                    <text x='5.000'
                          y='696.000'>+ setLabelFormatter(formatter:javafx.util.StringConverter&lt;java.lang.Number&gt;):void</text>
                    <text x='5.000'
                          y='707.000'>+ setLowValue(low:double):void</text>
                    <text x='5.000'
                          y='718.000'>+ setLowValueChanging(flag:boolean):void</text>
                    <text x='5.000'
                          y='729.000'>+ setMajorTickUnit(tickUnit:double):void</text>
                    <text x='5.000'
                          y='740.000'>+ setMax(max:double):void</text>
                    <text x='5.000'
                          y='751.000'>+ setMin(min:double):void</text>
                    <text x='5.000'
                          y='762.000'>+ setMinorTickCount(numberOfTicks:int):void</text>
                    <text x='5.000'
                          y='773.000'>+ setOrientation(orientation:javafx.geometry.Orientation):void</text>
                    <text x='5.000'
                          y='784.000'>+ setSnapToTicks(flag:boolean):void</text>
                    <text x='5.000'
                          y='795.000'>+ setShowTickLabels(flag:boolean):void</text>
                    <text x='5.000'
                          y='806.000'>+ setShowTickMarks(flag:boolean):void</text>
                    <text x='5.000'
                          y='817.000'>+ showTickLabelsProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='828.000'>+ showTickMarksProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='839.000'>+ snapToTicksProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='850.000'>- snapValueToTicks(value:double):double</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='otherClass'
                  height='73.000'
                  width='604.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.fx.internal.FoundationFXControl'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='604.000'
                          height='73.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='604.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='287.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='245.000'
                          y='24.000'
                          class='abstract'>FoundationFXControl</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='604.000'
                          y2='45.000'
                          class='separator'/>
                    <text y='41.000'>- m_Stylesheet:java.lang.String</text>
                    <text x='5.000'
                          y='58.000'># FoundationFXControl()</text>
                    <text x='5.000'
                          y='69.000'># getUserAgentStylesheet(lookupClass:java.lang.Class&lt;?&gt;,fileName:java.lang.String):java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='externalClass'
                  height='337.000'
                  width='640.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.scene.control.Control'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='640.000'
                          height='337.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='640.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='305.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='299.000'
                          y='24.000'
                          class='abstract'>Control</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='640.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'>&#x2026;</text>
                    <text x='5.000'
                          y='58.000'># Control()</text>
                    <text x='5.000'
                          y='69.000'>+ skinProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Skin&lt;?&gt;&gt;</text>
                    <text x='5.000'
                          y='80.000'>+ setSkin(arg0:javafx.scene.control.Skin&lt;?&gt;):void</text>
                    <text x='5.000'
                          y='91.000'>+ getSkin():javafx.scene.control.Skin&lt;?&gt;</text>
                    <text x='5.000'
                          y='102.000'>+ tooltipProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Tooltip&gt;</text>
                    <text x='5.000'
                          y='113.000'>+ setTooltip(arg0:javafx.scene.control.Tooltip):void</text>
                    <text x='5.000'
                          y='124.000'>+ getTooltip():javafx.scene.control.Tooltip</text>
                    <text x='5.000'
                          y='135.000'>+ contextMenuProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContextMenu&gt;</text>
                    <text x='5.000'
                          y='146.000'>+ setContextMenu(arg0:javafx.scene.control.ContextMenu):void</text>
                    <text x='5.000'
                          y='157.000'>+ getContextMenu():javafx.scene.control.ContextMenu</text>
                    <text x='5.000'
                          y='168.000'>+ isResizable():boolean</text>
                    <text x='5.000'
                          y='179.000'># computeMinWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='190.000'># computeMinHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='201.000'># computeMaxWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='212.000'># computeMaxHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='223.000'># computePrefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='234.000'># computePrefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='245.000'>+ getBaselineOffset():double</text>
                    <text x='5.000'
                          y='256.000'># layoutChildren():void</text>
                    <text x='5.000'
                          y='267.000'># createDefaultSkin():javafx.scene.control.Skin&lt;?&gt;</text>
                    <text x='5.000'
                          y='278.000'
                          class='static'>+ getClassCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='289.000'>+ getCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='300.000'># getControlCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='311.000'># getInitialFocusTraversable():java.lang.Boolean</text>
                    <text x='5.000'
                          y='322.000'>+ queryAccessibleAttribute(arg0:javafx.scene.AccessibleAttribute,arg1:java.lang.Object&#x2026;):java.lang.Object</text>
                    <text x='5.000'
                          y='333.000'>+ executeAccessibleAction(arg0:javafx.scene.AccessibleAction,arg1:java.lang.Object&#x2026;):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000004'>
            <rect class='externalClass'
                  height='1074.000'
                  width='1354.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.scene.layout.Region'>
            <g>
                <g clip-path='url(#ID000004)'>
                    <rect x='0.000'
                          y='0.000'
                          width='1354.000'
                          height='1074.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='1354.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='659.000'
                          y='13.000'>Region</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='1354.000'
                          y2='45.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ USE_PREF_SIZE:double</text>
                    <text y='41.000'
                          class='static final'>+ USE_COMPUTED_SIZE:double</text>
                    <text x='5.000'
                          y='58.000'>+ Region()</text>
                    <text x='5.000'
                          y='69.000'>+ isSnapToPixel():boolean</text>
                    <text x='5.000'
                          y='80.000'>+ setSnapToPixel(arg0:boolean):void</text>
                    <text x='5.000'
                          y='91.000'>+ snapToPixelProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='102.000'>+ setPadding(arg0:javafx.geometry.Insets):void</text>
                    <text x='5.000'
                          y='113.000'>+ getPadding():javafx.geometry.Insets</text>
                    <text x='5.000'
                          y='124.000'>+ paddingProperty():javafx.beans.property.ObjectProperty&lt;javafx.geometry.Insets&gt;</text>
                    <text x='5.000'
                          y='135.000'>+ setBackground(arg0:javafx.scene.layout.Background):void</text>
                    <text x='5.000'
                          y='146.000'>+ getBackground():javafx.scene.layout.Background</text>
                    <text x='5.000'
                          y='157.000'>+ backgroundProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Background&gt;</text>
                    <text x='5.000'
                          y='168.000'>+ setBorder(arg0:javafx.scene.layout.Border):void</text>
                    <text x='5.000'
                          y='179.000'>+ getBorder():javafx.scene.layout.Border</text>
                    <text x='5.000'
                          y='190.000'>+ borderProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Border&gt;</text>
                    <text x='5.000'
                          y='201.000'>+ opaqueInsetsProperty():javafx.beans.property.ObjectProperty&lt;javafx.geometry.Insets&gt;</text>
                    <text x='5.000'
                          y='212.000'>+ setOpaqueInsets(arg0:javafx.geometry.Insets):void</text>
                    <text x='5.000'
                          y='223.000'>+ getOpaqueInsets():javafx.geometry.Insets</text>
                    <text x='5.000'
                          y='234.000'>+ getInsets():javafx.geometry.Insets</text>
                    <text x='5.000'
                          y='245.000'>+ insetsProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Insets&gt;</text>
                    <text x='5.000'
                          y='256.000'># setWidth(arg0:double):void</text>
                    <text x='5.000'
                          y='267.000'>+ getWidth():double</text>
                    <text x='5.000'
                          y='278.000'>+ widthProperty():javafx.beans.property.ReadOnlyDoubleProperty</text>
                    <text x='5.000'
                          y='289.000'># setHeight(arg0:double):void</text>
                    <text x='5.000'
                          y='300.000'>+ getHeight():double</text>
                    <text x='5.000'
                          y='311.000'>+ heightProperty():javafx.beans.property.ReadOnlyDoubleProperty</text>
                    <text x='5.000'
                          y='322.000'>+ setMinWidth(arg0:double):void</text>
                    <text x='5.000'
                          y='333.000'>+ getMinWidth():double</text>
                    <text x='5.000'
                          y='344.000'>+ minWidthProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='355.000'>+ setMinHeight(arg0:double):void</text>
                    <text x='5.000'
                          y='366.000'>+ getMinHeight():double</text>
                    <text x='5.000'
                          y='377.000'>+ minHeightProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='388.000'>+ setMinSize(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='399.000'>+ setPrefWidth(arg0:double):void</text>
                    <text x='5.000'
                          y='410.000'>+ getPrefWidth():double</text>
                    <text x='5.000'
                          y='421.000'>+ prefWidthProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='432.000'>+ setPrefHeight(arg0:double):void</text>
                    <text x='5.000'
                          y='443.000'>+ getPrefHeight():double</text>
                    <text x='5.000'
                          y='454.000'>+ prefHeightProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='465.000'>+ setPrefSize(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='476.000'>+ setMaxWidth(arg0:double):void</text>
                    <text x='5.000'
                          y='487.000'>+ getMaxWidth():double</text>
                    <text x='5.000'
                          y='498.000'>+ maxWidthProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='509.000'>+ setMaxHeight(arg0:double):void</text>
                    <text x='5.000'
                          y='520.000'>+ getMaxHeight():double</text>
                    <text x='5.000'
                          y='531.000'>+ maxHeightProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='542.000'>+ setMaxSize(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='553.000'>+ getShape():javafx.scene.shape.Shape</text>
                    <text x='5.000'
                          y='564.000'>+ setShape(arg0:javafx.scene.shape.Shape):void</text>
                    <text x='5.000'
                          y='575.000'>+ shapeProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.Shape&gt;</text>
                    <text x='5.000'
                          y='586.000'>+ setScaleShape(arg0:boolean):void</text>
                    <text x='5.000'
                          y='597.000'>+ isScaleShape():boolean</text>
                    <text x='5.000'
                          y='608.000'>+ scaleShapeProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='619.000'>+ setCenterShape(arg0:boolean):void</text>
                    <text x='5.000'
                          y='630.000'>+ isCenterShape():boolean</text>
                    <text x='5.000'
                          y='641.000'>+ centerShapeProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='652.000'>+ setCacheShape(arg0:boolean):void</text>
                    <text x='5.000'
                          y='663.000'>+ isCacheShape():boolean</text>
                    <text x='5.000'
                          y='674.000'>+ cacheShapeProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='685.000'>+ isResizable():boolean</text>
                    <text x='5.000'
                          y='696.000'>+ resize(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='707.000'>+ minWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='718.000'>+ minHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='729.000'>+ prefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='740.000'>+ prefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='751.000'>+ maxWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='762.000'>+ maxHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='773.000'># computeMinWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='784.000'># computeMinHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='795.000'># computePrefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='806.000'># computePrefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='817.000'># computeMaxWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='828.000'># computeMaxHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='839.000'># snapSpace(arg0:double):double</text>
                    <text x='5.000'
                          y='850.000'>+ snapSpaceX(arg0:double):double</text>
                    <text x='5.000'
                          y='861.000'>+ snapSpaceY(arg0:double):double</text>
                    <text x='5.000'
                          y='872.000'># snapSize(arg0:double):double</text>
                    <text x='5.000'
                          y='883.000'>+ snapSizeX(arg0:double):double</text>
                    <text x='5.000'
                          y='894.000'>+ snapSizeY(arg0:double):double</text>
                    <text x='5.000'
                          y='905.000'># snapPosition(arg0:double):double</text>
                    <text x='5.000'
                          y='916.000'>+ snapPositionX(arg0:double):double</text>
                    <text x='5.000'
                          y='927.000'>+ snapPositionY(arg0:double):double</text>
                    <text x='5.000'
                          y='938.000'>+ snappedTopInset():double</text>
                    <text x='5.000'
                          y='949.000'>+ snappedBottomInset():double</text>
                    <text x='5.000'
                          y='960.000'>+ snappedLeftInset():double</text>
                    <text x='5.000'
                          y='971.000'>+ snappedRightInset():double</text>
                    <text x='5.000'
                          y='982.000'># positionInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.HPos,arg7:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='993.000'
                          class='static'>+ positionInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:javafx.geometry.HPos,arg8:javafx.geometry.VPos,arg9:boolean):void</text>
                    <text x='5.000'
                          y='1004.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.HPos,arg7:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='1015.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:javafx.geometry.HPos,arg8:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='1026.000'># layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:boolean,arg8:boolean,arg9:javafx.geometry.HPos,arg10:javafx.geometry.VPos):void</text>
                    <text x='5.000'
                          y='1037.000'
                          class='static'>+ layoutInArea(arg0:javafx.scene.Node,arg1:double,arg2:double,arg3:double,arg4:double,arg5:double,arg6:javafx.geometry.Insets,arg7:boolean,arg8:boolean,arg9:javafx.geometry.HPos,arg10:javafx.geometry.VPos,arg11:boolean):void</text>
                    <text x='5.000'
                          y='1048.000'>+ getUserAgentStylesheet():java.lang.String</text>
                    <text x='5.000'
                          y='1059.000'
                          class='static'>+ getClassCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='1070.000'>+ getCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000005'>
            <rect class='externalClass'
                  height='84.000'
                  width='508.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.scene.control.Skinnable'>
            <g>
                <g clip-path='url(#ID000005)'>
                    <rect x='0.000'
                          y='0.000'
                          width='508.000'
                          height='84.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='508.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='227.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='227.000'
                          y='24.000'
                          class='abstract'>Skinnable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='508.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ skinProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Skin&lt;?&gt;&gt;</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ setSkin(arg0:javafx.scene.control.Skin&lt;?&gt;):void</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getSkin():javafx.scene.control.Skin&lt;?&gt;</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000006'>
            <rect class='externalClass'
                  height='315.000'
                  width='640.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.scene.Parent'>
            <g>
                <g clip-path='url(#ID000006)'>
                    <rect x='0.000'
                          y='0.000'
                          width='640.000'
                          height='315.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='640.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='305.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='302.000'
                          y='24.000'
                          class='abstract'>Parent</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='640.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'>&#x2026;</text>
                    <text x='5.000'
                          y='58.000'># Parent()</text>
                    <text x='5.000'
                          y='69.000'># getChildren():javafx.collections.ObservableList&lt;javafx.scene.Node&gt;</text>
                    <text x='5.000'
                          y='80.000'>+ getChildrenUnmodifiable():javafx.collections.ObservableList&lt;javafx.scene.Node&gt;</text>
                    <text x='5.000'
                          y='91.000'># getManagedChildren():java.util.List&lt;E&gt;</text>
                    <text x='5.000'
                          y='102.000'>+ lookup(arg0:java.lang.String):javafx.scene.Node</text>
                    <text x='5.000'
                          y='113.000'># setNeedsLayout(arg0:boolean):void</text>
                    <text x='5.000'
                          y='124.000'>+ isNeedsLayout():boolean</text>
                    <text x='5.000'
                          y='135.000'>+ needsLayoutProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='146.000'>+ requestLayout():void</text>
                    <text x='5.000'
                          y='157.000'># requestParentLayout():void</text>
                    <text x='5.000'
                          y='168.000'>+ prefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='179.000'>+ prefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='190.000'>+ minWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='201.000'>+ minHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='212.000'># computePrefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='223.000'># computePrefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='234.000'># computeMinWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='245.000'># computeMinHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='256.000'>+ getBaselineOffset():double</text>
                    <text x='5.000'
                          y='267.000'>+ layout():void</text>
                    <text x='5.000'
                          y='278.000'># layoutChildren():void</text>
                    <text x='5.000'
                          y='289.000'>+ getStylesheets():javafx.collections.ObservableList&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='300.000'># updateBounds():void</text>
                    <text x='5.000'
                          y='311.000'>+ queryAccessibleAttribute(arg0:javafx.scene.AccessibleAttribute,arg1:java.lang.Object&#x2026;):java.lang.Object</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000007'>
            <rect class='externalClass'
                  height='3813.000'
                  width='976.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.scene.Node'>
            <g>
                <g clip-path='url(#ID000007)'>
                    <rect x='0.000'
                          y='0.000'
                          width='976.000'
                          height='3813.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='976.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='473.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='476.000'
                          y='24.000'
                          class='abstract'>Node</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='976.000'
                          y2='45.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ BASELINE_OFFSET_SAME_AS_HEIGHT:double</text>
                    <text x='5.000'
                          y='58.000'># Node()</text>
                    <text x='5.000'
                          y='69.000'>+ getProperties():javafx.collections.ObservableMap&lt;java.lang.Object,java.lang.Object&gt;</text>
                    <text x='5.000'
                          y='80.000'>+ hasProperties():boolean</text>
                    <text x='5.000'
                          y='91.000'>+ setUserData(arg0:java.lang.Object):void</text>
                    <text x='5.000'
                          y='102.000'>+ getUserData():java.lang.Object</text>
                    <text x='5.000'
                          y='113.000'>+ getParent():javafx.scene.Parent</text>
                    <text x='5.000'
                          y='124.000'>+ parentProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Parent&gt;</text>
                    <text x='5.000'
                          y='135.000'>+ getScene():javafx.scene.Scene</text>
                    <text x='5.000'
                          y='146.000'>+ sceneProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Scene&gt;</text>
                    <text x='5.000'
                          y='157.000'>+ setId(arg0:java.lang.String):void</text>
                    <text x='5.000'
                          y='168.000'>+ getId():java.lang.String</text>
                    <text x='5.000'
                          y='179.000'>+ idProperty():javafx.beans.property.StringProperty</text>
                    <text x='5.000'
                          y='190.000'>+ getStyleClass():javafx.collections.ObservableList&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='201.000'>+ setStyle(arg0:java.lang.String):void</text>
                    <text x='5.000'
                          y='212.000'>+ getStyle():java.lang.String</text>
                    <text x='5.000'
                          y='223.000'>+ styleProperty():javafx.beans.property.StringProperty</text>
                    <text x='5.000'
                          y='234.000'>+ setVisible(arg0:boolean):void</text>
                    <text x='5.000'
                          y='245.000'>+ isVisible():boolean</text>
                    <text x='5.000'
                          y='256.000'>+ visibleProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='267.000'>+ setCursor(arg0:javafx.scene.Cursor):void</text>
                    <text x='5.000'
                          y='278.000'>+ getCursor():javafx.scene.Cursor</text>
                    <text x='5.000'
                          y='289.000'>+ cursorProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.Cursor&gt;</text>
                    <text x='5.000'
                          y='300.000'>+ setOpacity(arg0:double):void</text>
                    <text x='5.000'
                          y='311.000'>+ getOpacity():double</text>
                    <text x='5.000'
                          y='322.000'>+ opacityProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='333.000'>+ setBlendMode(arg0:javafx.scene.effect.BlendMode):void</text>
                    <text x='5.000'
                          y='344.000'>+ getBlendMode():javafx.scene.effect.BlendMode</text>
                    <text x='5.000'
                          y='355.000'>+ blendModeProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlendMode&gt;</text>
                    <text x='5.000'
                          y='366.000'>+ setClip(arg0:javafx.scene.Node):void</text>
                    <text x='5.000'
                          y='377.000'>+ getClip():javafx.scene.Node</text>
                    <text x='5.000'
                          y='388.000'>+ clipProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;</text>
                    <text x='5.000'
                          y='399.000'>+ setCache(arg0:boolean):void</text>
                    <text x='5.000'
                          y='410.000'>+ isCache():boolean</text>
                    <text x='5.000'
                          y='421.000'>+ cacheProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='432.000'>+ setCacheHint(arg0:javafx.scene.CacheHint):void</text>
                    <text x='5.000'
                          y='443.000'>+ getCacheHint():javafx.scene.CacheHint</text>
                    <text x='5.000'
                          y='454.000'>+ cacheHintProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.CacheHint&gt;</text>
                    <text x='5.000'
                          y='465.000'>+ setEffect(arg0:javafx.scene.effect.Effect):void</text>
                    <text x='5.000'
                          y='476.000'>+ getEffect():javafx.scene.effect.Effect</text>
                    <text x='5.000'
                          y='487.000'>+ effectProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;</text>
                    <text x='5.000'
                          y='498.000'>+ setDepthTest(arg0:javafx.scene.DepthTest):void</text>
                    <text x='5.000'
                          y='509.000'>+ getDepthTest():javafx.scene.DepthTest</text>
                    <text x='5.000'
                          y='520.000'>+ depthTestProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.DepthTest&gt;</text>
                    <text x='5.000'
                          y='531.000'>+ setDisable(arg0:boolean):void</text>
                    <text x='5.000'
                          y='542.000'>+ isDisable():boolean</text>
                    <text x='5.000'
                          y='553.000'>+ disableProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='564.000'>+ setPickOnBounds(arg0:boolean):void</text>
                    <text x='5.000'
                          y='575.000'>+ isPickOnBounds():boolean</text>
                    <text x='5.000'
                          y='586.000'>+ pickOnBoundsProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='597.000'># setDisabled(arg0:boolean):void</text>
                    <text x='5.000'
                          y='608.000'>+ isDisabled():boolean</text>
                    <text x='5.000'
                          y='619.000'>+ disabledProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='630.000'>+ lookup(arg0:java.lang.String):javafx.scene.Node</text>
                    <text x='5.000'
                          y='641.000'>+ lookupAll(arg0:java.lang.String):java.util.Set&lt;javafx.scene.Node&gt;</text>
                    <text x='5.000'
                          y='652.000'>+ toBack():void</text>
                    <text x='5.000'
                          y='663.000'>+ toFront():void</text>
                    <text x='5.000'
                          y='674.000'>+ snapshot(arg0:javafx.scene.SnapshotParameters,arg1:javafx.scene.image.WritableImage):javafx.scene.image.WritableImage</text>
                    <text x='5.000'
                          y='685.000'>+ snapshot(arg0:javafx.util.Callback&lt;javafx.scene.SnapshotResult,java.lang.Void&gt;,arg1:javafx.scene.SnapshotParameters,arg2:javafx.scene.image.WritableImage):void</text>
                    <text x='5.000'
                          y='696.000'>+ setOnDragEntered(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;):void</text>
                    <text x='5.000'
                          y='707.000'>+ getOnDragEntered():javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;</text>
                    <text x='5.000'
                          y='718.000'>+ onDragEnteredProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='729.000'>+ setOnDragExited(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;):void</text>
                    <text x='5.000'
                          y='740.000'>+ getOnDragExited():javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;</text>
                    <text x='5.000'
                          y='751.000'>+ onDragExitedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='762.000'>+ setOnDragOver(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;):void</text>
                    <text x='5.000'
                          y='773.000'>+ getOnDragOver():javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;</text>
                    <text x='5.000'
                          y='784.000'>+ onDragOverProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='795.000'>+ setOnDragDropped(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;):void</text>
                    <text x='5.000'
                          y='806.000'>+ getOnDragDropped():javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;</text>
                    <text x='5.000'
                          y='817.000'>+ onDragDroppedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='828.000'>+ setOnDragDone(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;):void</text>
                    <text x='5.000'
                          y='839.000'>+ getOnDragDone():javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;</text>
                    <text x='5.000'
                          y='850.000'>+ onDragDoneProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='861.000'>+ startDragAndDrop(arg0:javafx.scene.input.TransferMode&#x2026;):javafx.scene.input.Dragboard</text>
                    <text x='5.000'
                          y='872.000'>+ startFullDrag():void</text>
                    <text x='5.000'
                          y='883.000'>+ setManaged(arg0:boolean):void</text>
                    <text x='5.000'
                          y='894.000'>+ isManaged():boolean</text>
                    <text x='5.000'
                          y='905.000'>+ managedProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='916.000'>+ setLayoutX(arg0:double):void</text>
                    <text x='5.000'
                          y='927.000'>+ getLayoutX():double</text>
                    <text x='5.000'
                          y='938.000'>+ layoutXProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='949.000'>+ setLayoutY(arg0:double):void</text>
                    <text x='5.000'
                          y='960.000'>+ getLayoutY():double</text>
                    <text x='5.000'
                          y='971.000'>+ layoutYProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='982.000'>+ relocate(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='993.000'>+ isResizable():boolean</text>
                    <text x='5.000'
                          y='1004.000'>+ getContentBias():javafx.geometry.Orientation</text>
                    <text x='5.000'
                          y='1015.000'>+ minWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='1026.000'>+ minHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='1037.000'>+ prefWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='1048.000'>+ prefHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='1059.000'>+ maxWidth(arg0:double):double</text>
                    <text x='5.000'
                          y='1070.000'>+ maxHeight(arg0:double):double</text>
                    <text x='5.000'
                          y='1081.000'>+ resize(arg0:double,arg1:double):void</text>
                    <text x='5.000'
                          y='1092.000'>+ autosize():void</text>
                    <text x='5.000'
                          y='1103.000'>+ resizeRelocate(arg0:double,arg1:double,arg2:double,arg3:double):void</text>
                    <text x='5.000'
                          y='1114.000'>+ getBaselineOffset():double</text>
                    <text x='5.000'
                          y='1125.000'>+ computeAreaInScreen():double</text>
                    <text x='5.000'
                          y='1136.000'>+ getBoundsInParent():javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1147.000'>+ boundsInParentProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;</text>
                    <text x='5.000'
                          y='1158.000'>+ getBoundsInLocal():javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1169.000'>+ boundsInLocalProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;</text>
                    <text x='5.000'
                          y='1180.000'>+ getLayoutBounds():javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1191.000'>+ layoutBoundsProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;</text>
                    <text x='5.000'
                          y='1202.000'>+ contains(arg0:double,arg1:double):boolean</text>
                    <text x='5.000'
                          y='1213.000'>+ contains(arg0:javafx.geometry.Point2D):boolean</text>
                    <text x='5.000'
                          y='1224.000'>+ intersects(arg0:double,arg1:double,arg2:double,arg3:double):boolean</text>
                    <text x='5.000'
                          y='1235.000'>+ intersects(arg0:javafx.geometry.Bounds):boolean</text>
                    <text x='5.000'
                          y='1246.000'>+ screenToLocal(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1257.000'>+ screenToLocal(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1268.000'>+ screenToLocal(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1279.000'>+ sceneToLocal(arg0:double,arg1:double,arg2:boolean):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1290.000'>+ sceneToLocal(arg0:javafx.geometry.Point2D,arg1:boolean):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1301.000'>+ sceneToLocal(arg0:javafx.geometry.Bounds,arg1:boolean):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1312.000'>+ sceneToLocal(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1323.000'>+ sceneToLocal(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1334.000'>+ sceneToLocal(arg0:javafx.geometry.Point3D):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1345.000'>+ sceneToLocal(arg0:double,arg1:double,arg2:double):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1356.000'>+ sceneToLocal(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1367.000'>+ localToScreen(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1378.000'>+ localToScreen(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1389.000'>+ localToScreen(arg0:double,arg1:double,arg2:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1400.000'>+ localToScreen(arg0:javafx.geometry.Point3D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1411.000'>+ localToScreen(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1422.000'>+ localToScene(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1433.000'>+ localToScene(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1444.000'>+ localToScene(arg0:javafx.geometry.Point3D):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1455.000'>+ localToScene(arg0:double,arg1:double,arg2:double):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1466.000'>+ localToScene(arg0:javafx.geometry.Point3D,arg1:boolean):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1477.000'>+ localToScene(arg0:double,arg1:double,arg2:double,arg3:boolean):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1488.000'>+ localToScene(arg0:javafx.geometry.Point2D,arg1:boolean):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1499.000'>+ localToScene(arg0:double,arg1:double,arg2:boolean):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1510.000'>+ localToScene(arg0:javafx.geometry.Bounds,arg1:boolean):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1521.000'>+ localToScene(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1532.000'>+ parentToLocal(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1543.000'>+ parentToLocal(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1554.000'>+ parentToLocal(arg0:javafx.geometry.Point3D):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1565.000'>+ parentToLocal(arg0:double,arg1:double,arg2:double):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1576.000'>+ parentToLocal(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1587.000'>+ localToParent(arg0:double,arg1:double):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1598.000'>+ localToParent(arg0:javafx.geometry.Point2D):javafx.geometry.Point2D</text>
                    <text x='5.000'
                          y='1609.000'>+ localToParent(arg0:javafx.geometry.Point3D):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1620.000'>+ localToParent(arg0:double,arg1:double,arg2:double):javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1631.000'>+ localToParent(arg0:javafx.geometry.Bounds):javafx.geometry.Bounds</text>
                    <text x='5.000'
                          y='1642.000'>+ viewOrderProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1653.000'>+ setViewOrder(arg0:double):void</text>
                    <text x='5.000'
                          y='1664.000'>+ getViewOrder():double</text>
                    <text x='5.000'
                          y='1675.000'>+ getTransforms():javafx.collections.ObservableList&lt;javafx.scene.transform.Transform&gt;</text>
                    <text x='5.000'
                          y='1686.000'>+ setTranslateX(arg0:double):void</text>
                    <text x='5.000'
                          y='1697.000'>+ getTranslateX():double</text>
                    <text x='5.000'
                          y='1708.000'>+ translateXProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1719.000'>+ setTranslateY(arg0:double):void</text>
                    <text x='5.000'
                          y='1730.000'>+ getTranslateY():double</text>
                    <text x='5.000'
                          y='1741.000'>+ translateYProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1752.000'>+ setTranslateZ(arg0:double):void</text>
                    <text x='5.000'
                          y='1763.000'>+ getTranslateZ():double</text>
                    <text x='5.000'
                          y='1774.000'>+ translateZProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1785.000'>+ setScaleX(arg0:double):void</text>
                    <text x='5.000'
                          y='1796.000'>+ getScaleX():double</text>
                    <text x='5.000'
                          y='1807.000'>+ scaleXProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1818.000'>+ setScaleY(arg0:double):void</text>
                    <text x='5.000'
                          y='1829.000'>+ getScaleY():double</text>
                    <text x='5.000'
                          y='1840.000'>+ scaleYProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1851.000'>+ setScaleZ(arg0:double):void</text>
                    <text x='5.000'
                          y='1862.000'>+ getScaleZ():double</text>
                    <text x='5.000'
                          y='1873.000'>+ scaleZProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1884.000'>+ setRotate(arg0:double):void</text>
                    <text x='5.000'
                          y='1895.000'>+ getRotate():double</text>
                    <text x='5.000'
                          y='1906.000'>+ rotateProperty():javafx.beans.property.DoubleProperty</text>
                    <text x='5.000'
                          y='1917.000'>+ setRotationAxis(arg0:javafx.geometry.Point3D):void</text>
                    <text x='5.000'
                          y='1928.000'>+ getRotationAxis():javafx.geometry.Point3D</text>
                    <text x='5.000'
                          y='1939.000'>+ rotationAxisProperty():javafx.beans.property.ObjectProperty&lt;javafx.geometry.Point3D&gt;</text>
                    <text x='5.000'
                          y='1950.000'>+ localToParentTransformProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.transform.Transform&gt;</text>
                    <text x='5.000'
                          y='1961.000'>+ getLocalToParentTransform():javafx.scene.transform.Transform</text>
                    <text x='5.000'
                          y='1972.000'>+ localToSceneTransformProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.transform.Transform&gt;</text>
                    <text x='5.000'
                          y='1983.000'>+ getLocalToSceneTransform():javafx.scene.transform.Transform</text>
                    <text x='5.000'
                          y='1994.000'>+ setNodeOrientation(arg0:javafx.geometry.NodeOrientation):void</text>
                    <text x='5.000'
                          y='2005.000'>+ getNodeOrientation():javafx.geometry.NodeOrientation</text>
                    <text x='5.000'
                          y='2016.000'>+ nodeOrientationProperty():javafx.beans.property.ObjectProperty&lt;javafx.geometry.NodeOrientation&gt;</text>
                    <text x='5.000'
                          y='2027.000'>+ getEffectiveNodeOrientation():javafx.geometry.NodeOrientation</text>
                    <text x='5.000'
                          y='2038.000'>+ effectiveNodeOrientationProperty():javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.NodeOrientation&gt;</text>
                    <text x='5.000'
                          y='2049.000'>+ usesMirroring():boolean</text>
                    <text x='5.000'
                          y='2060.000'>+ setMouseTransparent(arg0:boolean):void</text>
                    <text x='5.000'
                          y='2071.000'>+ isMouseTransparent():boolean</text>
                    <text x='5.000'
                          y='2082.000'>+ mouseTransparentProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='2093.000'># setHover(arg0:boolean):void</text>
                    <text x='5.000'
                          y='2104.000'>+ isHover():boolean</text>
                    <text x='5.000'
                          y='2115.000'>+ hoverProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='2126.000'># setPressed(arg0:boolean):void</text>
                    <text x='5.000'
                          y='2137.000'>+ isPressed():boolean</text>
                    <text x='5.000'
                          y='2148.000'>+ pressedProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='2159.000'>+ setOnContextMenuRequested(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;):void</text>
                    <text x='5.000'
                          y='2170.000'>+ getOnContextMenuRequested():javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;</text>
                    <text x='5.000'
                          y='2181.000'>+ onContextMenuRequestedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2192.000'>+ setOnMouseClicked(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2203.000'>+ getOnMouseClicked():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2214.000'>+ onMouseClickedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2225.000'>+ setOnMouseDragged(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2236.000'>+ getOnMouseDragged():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2247.000'>+ onMouseDraggedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2258.000'>+ setOnMouseEntered(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2269.000'>+ getOnMouseEntered():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2280.000'>+ onMouseEnteredProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2291.000'>+ setOnMouseExited(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2302.000'>+ getOnMouseExited():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2313.000'>+ onMouseExitedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2324.000'>+ setOnMouseMoved(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2335.000'>+ getOnMouseMoved():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2346.000'>+ onMouseMovedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2357.000'>+ setOnMousePressed(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2368.000'>+ getOnMousePressed():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2379.000'>+ onMousePressedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2390.000'>+ setOnMouseReleased(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2401.000'>+ getOnMouseReleased():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2412.000'>+ onMouseReleasedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2423.000'>+ setOnDragDetected(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;):void</text>
                    <text x='5.000'
                          y='2434.000'>+ getOnDragDetected():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;</text>
                    <text x='5.000'
                          y='2445.000'>+ onDragDetectedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2456.000'>+ setOnMouseDragOver(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;):void</text>
                    <text x='5.000'
                          y='2467.000'>+ getOnMouseDragOver():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;</text>
                    <text x='5.000'
                          y='2478.000'>+ onMouseDragOverProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2489.000'>+ setOnMouseDragReleased(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;):void</text>
                    <text x='5.000'
                          y='2500.000'>+ getOnMouseDragReleased():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;</text>
                    <text x='5.000'
                          y='2511.000'>+ onMouseDragReleasedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2522.000'>+ setOnMouseDragEntered(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;):void</text>
                    <text x='5.000'
                          y='2533.000'>+ getOnMouseDragEntered():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;</text>
                    <text x='5.000'
                          y='2544.000'>+ onMouseDragEnteredProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2555.000'>+ setOnMouseDragExited(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;):void</text>
                    <text x='5.000'
                          y='2566.000'>+ getOnMouseDragExited():javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;</text>
                    <text x='5.000'
                          y='2577.000'>+ onMouseDragExitedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2588.000'>+ setOnScrollStarted(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;):void</text>
                    <text x='5.000'
                          y='2599.000'>+ getOnScrollStarted():javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;</text>
                    <text x='5.000'
                          y='2610.000'>+ onScrollStartedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2621.000'>+ setOnScroll(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;):void</text>
                    <text x='5.000'
                          y='2632.000'>+ getOnScroll():javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;</text>
                    <text x='5.000'
                          y='2643.000'>+ onScrollProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2654.000'>+ setOnScrollFinished(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;):void</text>
                    <text x='5.000'
                          y='2665.000'>+ getOnScrollFinished():javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;</text>
                    <text x='5.000'
                          y='2676.000'>+ onScrollFinishedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2687.000'>+ setOnRotationStarted(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;):void</text>
                    <text x='5.000'
                          y='2698.000'>+ getOnRotationStarted():javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;</text>
                    <text x='5.000'
                          y='2709.000'>+ onRotationStartedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2720.000'>+ setOnRotate(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;):void</text>
                    <text x='5.000'
                          y='2731.000'>+ getOnRotate():javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;</text>
                    <text x='5.000'
                          y='2742.000'>+ onRotateProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2753.000'>+ setOnRotationFinished(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;):void</text>
                    <text x='5.000'
                          y='2764.000'>+ getOnRotationFinished():javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;</text>
                    <text x='5.000'
                          y='2775.000'>+ onRotationFinishedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2786.000'>+ setOnZoomStarted(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;):void</text>
                    <text x='5.000'
                          y='2797.000'>+ getOnZoomStarted():javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;</text>
                    <text x='5.000'
                          y='2808.000'>+ onZoomStartedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2819.000'>+ setOnZoom(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;):void</text>
                    <text x='5.000'
                          y='2830.000'>+ getOnZoom():javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;</text>
                    <text x='5.000'
                          y='2841.000'>+ onZoomProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2852.000'>+ setOnZoomFinished(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;):void</text>
                    <text x='5.000'
                          y='2863.000'>+ getOnZoomFinished():javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;</text>
                    <text x='5.000'
                          y='2874.000'>+ onZoomFinishedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2885.000'>+ setOnSwipeUp(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;):void</text>
                    <text x='5.000'
                          y='2896.000'>+ getOnSwipeUp():javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;</text>
                    <text x='5.000'
                          y='2907.000'>+ onSwipeUpProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2918.000'>+ setOnSwipeDown(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;):void</text>
                    <text x='5.000'
                          y='2929.000'>+ getOnSwipeDown():javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;</text>
                    <text x='5.000'
                          y='2940.000'>+ onSwipeDownProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2951.000'>+ setOnSwipeLeft(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;):void</text>
                    <text x='5.000'
                          y='2962.000'>+ getOnSwipeLeft():javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;</text>
                    <text x='5.000'
                          y='2973.000'>+ onSwipeLeftProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='2984.000'>+ setOnSwipeRight(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;):void</text>
                    <text x='5.000'
                          y='2995.000'>+ getOnSwipeRight():javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;</text>
                    <text x='5.000'
                          y='3006.000'>+ onSwipeRightProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3017.000'>+ setOnTouchPressed(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;):void</text>
                    <text x='5.000'
                          y='3028.000'>+ getOnTouchPressed():javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;</text>
                    <text x='5.000'
                          y='3039.000'>+ onTouchPressedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3050.000'>+ setOnTouchMoved(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;):void</text>
                    <text x='5.000'
                          y='3061.000'>+ getOnTouchMoved():javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;</text>
                    <text x='5.000'
                          y='3072.000'>+ onTouchMovedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3083.000'>+ setOnTouchReleased(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;):void</text>
                    <text x='5.000'
                          y='3094.000'>+ getOnTouchReleased():javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;</text>
                    <text x='5.000'
                          y='3105.000'>+ onTouchReleasedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3116.000'>+ setOnTouchStationary(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;):void</text>
                    <text x='5.000'
                          y='3127.000'>+ getOnTouchStationary():javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;</text>
                    <text x='5.000'
                          y='3138.000'>+ onTouchStationaryProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3149.000'>+ setOnKeyPressed(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;):void</text>
                    <text x='5.000'
                          y='3160.000'>+ getOnKeyPressed():javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;</text>
                    <text x='5.000'
                          y='3171.000'>+ onKeyPressedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3182.000'>+ setOnKeyReleased(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;):void</text>
                    <text x='5.000'
                          y='3193.000'>+ getOnKeyReleased():javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;</text>
                    <text x='5.000'
                          y='3204.000'>+ onKeyReleasedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3215.000'>+ setOnKeyTyped(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;):void</text>
                    <text x='5.000'
                          y='3226.000'>+ getOnKeyTyped():javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;</text>
                    <text x='5.000'
                          y='3237.000'>+ onKeyTypedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3248.000'>+ setOnInputMethodTextChanged(arg0:javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;):void</text>
                    <text x='5.000'
                          y='3259.000'>+ getOnInputMethodTextChanged():javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;</text>
                    <text x='5.000'
                          y='3270.000'>+ onInputMethodTextChangedProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;&gt;</text>
                    <text x='5.000'
                          y='3281.000'>+ setInputMethodRequests(arg0:javafx.scene.input.InputMethodRequests):void</text>
                    <text x='5.000'
                          y='3292.000'>+ getInputMethodRequests():javafx.scene.input.InputMethodRequests</text>
                    <text x='5.000'
                          y='3303.000'>+ inputMethodRequestsProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.input.InputMethodRequests&gt;</text>
                    <text x='5.000'
                          y='3314.000'># setFocused(arg0:boolean):void</text>
                    <text x='5.000'
                          y='3325.000'>+ isFocused():boolean</text>
                    <text x='5.000'
                          y='3336.000'>+ focusedProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='3347.000'>+ isFocusVisible():boolean</text>
                    <text x='5.000'
                          y='3358.000'>+ focusVisibleProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='3369.000'>+ isFocusWithin():boolean</text>
                    <text x='5.000'
                          y='3380.000'>+ focusWithinProperty():javafx.beans.property.ReadOnlyBooleanProperty</text>
                    <text x='5.000'
                          y='3391.000'>+ setFocusTraversable(arg0:boolean):void</text>
                    <text x='5.000'
                          y='3402.000'>+ isFocusTraversable():boolean</text>
                    <text x='5.000'
                          y='3413.000'>+ focusTraversableProperty():javafx.beans.property.BooleanProperty</text>
                    <text x='5.000'
                          y='3424.000'>+ requestFocus():void</text>
                    <text x='5.000'
                          y='3435.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='3446.000'>+ setEventDispatcher(arg0:javafx.event.EventDispatcher):void</text>
                    <text x='5.000'
                          y='3457.000'>+ getEventDispatcher():javafx.event.EventDispatcher</text>
                    <text x='5.000'
                          y='3468.000'>+ eventDispatcherProperty():javafx.beans.property.ObjectProperty&lt;javafx.event.EventDispatcher&gt;</text>
                    <text x='5.000'
                          y='3479.000'>+ addEventHandler(arg0:javafx.event.EventType&lt;T&gt;,arg1:javafx.event.EventHandler&lt;? super T&gt;):void</text>
                    <text x='5.000'
                          y='3490.000'>+ removeEventHandler(arg0:javafx.event.EventType&lt;T&gt;,arg1:javafx.event.EventHandler&lt;? super T&gt;):void</text>
                    <text x='5.000'
                          y='3501.000'>+ addEventFilter(arg0:javafx.event.EventType&lt;T&gt;,arg1:javafx.event.EventHandler&lt;? super T&gt;):void</text>
                    <text x='5.000'
                          y='3512.000'>+ removeEventFilter(arg0:javafx.event.EventType&lt;T&gt;,arg1:javafx.event.EventHandler&lt;? super T&gt;):void</text>
                    <text x='5.000'
                          y='3523.000'># setEventHandler(arg0:javafx.event.EventType&lt;T&gt;,arg1:javafx.event.EventHandler&lt;? super T&gt;):void</text>
                    <text x='5.000'
                          y='3534.000'>+ buildEventDispatchChain(arg0:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain</text>
                    <text x='5.000'
                          y='3545.000'>+ fireEvent(arg0:javafx.event.Event):void</text>
                    <text x='5.000'
                          y='3556.000'>+ getTypeSelector():java.lang.String</text>
                    <text x='5.000'
                          y='3567.000'>+ getStyleableParent():javafx.css.Styleable</text>
                    <text x='5.000'
                          y='3578.000'># getInitialFocusTraversable():java.lang.Boolean</text>
                    <text x='5.000'
                          y='3589.000'># getInitialCursor():javafx.scene.Cursor</text>
                    <text x='5.000'
                          y='3600.000'
                          class='static'>+ getClassCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='3611.000'>+ getCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='3622.000'>+ pseudoClassStateChanged(arg0:javafx.css.PseudoClass,arg1:boolean):void</text>
                    <text x='5.000'
                          y='3633.000'>+ getPseudoClassStates():javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;</text>
                    <text x='5.000'
                          y='3644.000'>+ applyCss():void</text>
                    <text x='5.000'
                          y='3655.000'>+ setAccessibleRole(arg0:javafx.scene.AccessibleRole):void</text>
                    <text x='5.000'
                          y='3666.000'>+ getAccessibleRole():javafx.scene.AccessibleRole</text>
                    <text x='5.000'
                          y='3677.000'>+ accessibleRoleProperty():javafx.beans.property.ObjectProperty&lt;javafx.scene.AccessibleRole&gt;</text>
                    <text x='5.000'
                          y='3688.000'>+ setAccessibleRoleDescription(arg0:java.lang.String):void</text>
                    <text x='5.000'
                          y='3699.000'>+ getAccessibleRoleDescription():java.lang.String</text>
                    <text x='5.000'
                          y='3710.000'>+ accessibleRoleDescriptionProperty():javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='3721.000'>+ setAccessibleText(arg0:java.lang.String):void</text>
                    <text x='5.000'
                          y='3732.000'>+ getAccessibleText():java.lang.String</text>
                    <text x='5.000'
                          y='3743.000'>+ accessibleTextProperty():javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='3754.000'>+ setAccessibleHelp(arg0:java.lang.String):void</text>
                    <text x='5.000'
                          y='3765.000'>+ getAccessibleHelp():java.lang.String</text>
                    <text x='5.000'
                          y='3776.000'>+ accessibleHelpProperty():javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='3787.000'>+ queryAccessibleAttribute(arg0:javafx.scene.AccessibleAttribute,arg1:java.lang.Object&#x2026;):java.lang.Object</text>
                    <text x='5.000'
                          y='3798.000'>+ executeAccessibleAction(arg0:javafx.scene.AccessibleAction,arg1:java.lang.Object&#x2026;):void</text>
                    <text x='5.000'
                          y='3809.000'>+ notifyAccessibleAttributeChanged(arg0:javafx.scene.AccessibleAttribute):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000008'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000008)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000009'>
            <rect class='externalClass'
                  height='106.000'
                  width='604.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.event.EventTarget'>
            <g>
                <g clip-path='url(#ID000009)'>
                    <rect x='0.000'
                          y='0.000'
                          width='604.000'
                          height='106.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='604.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='275.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='269.000'
                          y='24.000'
                          class='abstract'>EventTarget</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='604.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ buildEventDispatchChain(arg0:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain</text>
                    <text x='5.000'
                          y='69.000'>&#x2A22; addEventHandler(arg0:javafx.event.EventType&lt;E&gt;,arg1:javafx.event.EventHandler&lt;? super E&gt;):void</text>
                    <text x='5.000'
                          y='80.000'>&#x2A22; removeEventHandler(arg0:javafx.event.EventType&lt;E&gt;,arg1:javafx.event.EventHandler&lt;? super E&gt;):void</text>
                    <text x='5.000'
                          y='91.000'>&#x2A22; addEventFilter(arg0:javafx.event.EventType&lt;E&gt;,arg1:javafx.event.EventHandler&lt;? super E&gt;):void</text>
                    <text x='5.000'
                          y='102.000'>&#x2A22; removeEventFilter(arg0:javafx.event.EventType&lt;E&gt;,arg1:javafx.event.EventHandler&lt;? super E&gt;):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000010'>
            <rect class='externalClass'
                  height='139.000'
                  width='556.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javafx.css.Styleable'>
            <g>
                <g clip-path='url(#ID000010)'>
                    <rect x='0.000'
                          y='0.000'
                          width='556.000'
                          height='139.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='556.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='251.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='251.000'
                          y='24.000'
                          class='abstract'>Styleable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='556.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getTypeSelector():java.lang.String</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getId():java.lang.String</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getStyleClass():javafx.collections.ObservableList&lt;java.lang.String&gt;</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ getStyle():java.lang.String</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ getCssMetaData():java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;&gt;</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ getStyleableParent():javafx.css.Styleable</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ getPseudoClassStates():javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;</text>
                    <text x='5.000'
                          y='135.000'>&#x2A22; getStyleableNode():javafx.scene.Node</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M1056.000,6409.000 L1056.000,6309.000'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M1056.000,6236.000 L1056.000,6136.000'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M1081.000,5799.000 c0.000,-85.000,-25.000,0.000,-25.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M1031.000,5799.000 c0.000,-5675.000,-752.000,0.000,-752.000,-5675.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M1056.000,4625.000 L1056.000,4525.000'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M1056.000,4210.000 L1056.000,4110.000'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M1006.000,297.000 c0.000,-85.000,-301.000,0.000,-301.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M1056.000,297.000 c0.000,-151.000,123.000,0.000,123.000,-151.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='implementation'
          d='M1106.000,297.000 c0.000,-118.000,703.000,0.000,703.000,-118.000 v-15'
          marker-end='url(#implementation)'/>
    <use x='25.000'
         y='25.000'
         xlink:href='#javafx.scene.control.Skinnable'/>
    <use x='583.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='877.000'
         y='25.000'
         xlink:href='#javafx.event.EventTarget'/>
    <use x='1531.000'
         y='25.000'
         xlink:href='#javafx.css.Styleable'/>
    <use x='568.000'
         y='297.000'
         xlink:href='#javafx.scene.Node'/>
    <use x='736.000'
         y='4210.000'
         xlink:href='#javafx.scene.Parent'/>
    <use x='379.000'
         y='4625.000'
         xlink:href='#javafx.scene.layout.Region'/>
    <use x='736.000'
         y='5799.000'
         xlink:href='#javafx.scene.control.Control'/>
    <use x='754.000'
         y='6236.000'
         xlink:href='#org.tquadrat.foundation.fx.internal.FoundationFXControl'/>
    <use x='709.000'
         y='6409.000'
         xlink:href='#org.tquadrat.foundation.fx.control.RangeSlider'/>
</svg>