
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='829.000'
     height='863.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='84.000'
                  width='724.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.fx.css.TimeZoneConverter'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='724.000'
                          height='84.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='724.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='311.000'
                          y='13.000'>TimeZoneConverter</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='724.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>- TimeZoneConverter()</text>
                    <text x='5.000'
                          y='58.000'>+ convert(value:javafx.css.ParsedValue&lt;java.lang.String,java.time.ZoneId&gt;,font:javafx.scene.text.Font):java.time.ZoneId</text>
                    <text x='5.000'
                          y='69.000'
                          class='static'>+ getInstance():javafx.css.StyleConverter&lt;java.lang.String,java.time.ZoneId&gt;</text>
                    <text x='5.000'
                          y='80.000'>+ toString():java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='249.000'
                  width='754.000'
                  x='0.000'
                  y='8.000'/>
        </clipPath>
        <symbol id='javafx.css.StyleConverter'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='8.000'
                          width='754.000'
                          height='249.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='25.000'
                          x2='754.000'
                          y2='25.000'
                          class='separator'/>
                    <text x='335.000'
                          y='21.000'>StyleConverter</text>
                    <line x1='0.000'
                          y1='42.000'
                          x2='754.000'
                          y2='42.000'
                          class='separator'/>
                    <text x='5.000'
                          y='38.000'>&#x2026;</text>
                    <text x='5.000'
                          y='55.000'>+ StyleConverter()</text>
                    <text x='5.000'
                          y='66.000'>+ convert(arg0:javafx.css.ParsedValue&lt;F,T&gt;,arg1:javafx.scene.text.Font):T</text>
                    <text x='5.000'
                          y='77.000'
                          class='static'>+ getBooleanConverter():javafx.css.StyleConverter&lt;java.lang.String,java.lang.Boolean&gt;</text>
                    <text x='5.000'
                          y='88.000'
                          class='static'>+ getDurationConverter():javafx.css.StyleConverter&lt;?,javafx.util.Duration&gt;</text>
                    <text x='5.000'
                          y='99.000'
                          class='static'>+ getColorConverter():javafx.css.StyleConverter&lt;java.lang.String,javafx.scene.paint.Color&gt;</text>
                    <text x='5.000'
                          y='110.000'
                          class='static'>+ getEffectConverter():javafx.css.StyleConverter&lt;javafx.css.ParsedValue[],javafx.scene.effect.Effect&gt;</text>
                    <text x='5.000'
                          y='121.000'
                          class='static'>+ getEnumConverter(arg0:java.lang.Class&lt;E&gt;):javafx.css.StyleConverter&lt;java.lang.String,E&gt;</text>
                    <text x='5.000'
                          y='132.000'
                          class='static'>+ getFontConverter():javafx.css.StyleConverter&lt;javafx.css.ParsedValue[],javafx.scene.text.Font&gt;</text>
                    <text x='5.000'
                          y='143.000'
                          class='static'>+ getInsetsConverter():javafx.css.StyleConverter&lt;javafx.css.ParsedValue[],javafx.geometry.Insets&gt;</text>
                    <text x='5.000'
                          y='154.000'
                          class='static'>+ getPaintConverter():javafx.css.StyleConverter&lt;javafx.css.ParsedValue&lt;?,javafx.scene.paint.Paint&gt;,javafx.scene.paint.Paint&gt;</text>
                    <text x='5.000'
                          y='165.000'
                          class='static'>+ getSizeConverter():javafx.css.StyleConverter&lt;?,java.lang.Number&gt;</text>
                    <text x='5.000'
                          y='176.000'
                          class='static'>+ getStringConverter():javafx.css.StyleConverter&lt;java.lang.String,java.lang.String&gt;</text>
                    <text x='5.000'
                          y='187.000'
                          class='static'>+ getUrlConverter():javafx.css.StyleConverter&lt;javafx.css.ParsedValue[],java.lang.String&gt;</text>
                    <text x='5.000'
                          y='198.000'>+ convert(arg0:java.util.Map&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable,?&gt;,java.lang.Object&gt;):T</text>
                    <text x='5.000'
                          y='209.000'>+ writeBinary(arg0:java.io.DataOutputStream,arg1:javafx.css.StyleConverter.StringStore):void</text>
                    <text x='5.000'
                          y='220.000'
                          class='static'>+ clearCache():void</text>
                    <text x='5.000'
                          y='231.000'># getCachedValue(arg0:javafx.css.ParsedValue):T</text>
                    <text x='5.000'
                          y='242.000'># cacheValue(arg0:javafx.css.ParsedValue,arg1:java.lang.Object):void</text>
                    <text x='5.000'
                          y='253.000'
                          class='static'>+ readBinary(arg0:java.io.DataInputStream,arg1:java.lang.String[]):javafx.css.StyleConverter&lt;?,?&gt;</text>
                </g>
                <g transform='translate(729.000 0.000)'>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='template'/>
                    <rect x='0.000'
                          y='1.000'
                          width='50.000'
                          height='17.000'
                          class='externalClass'
                          stroke='none'
                          stroke-opacity='0.0'/>
                    <text x='5.000'
                          y='14.000'>F,T</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M414.500,654.000 c0.000,-85.000,-12.500,0.000,-12.500,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M402.000,305.000 c0.000,-93.000,12.500,0.000,12.500,-93.000 v-15'
          marker-end='url(#inheritance)'/>
    <use x='292.500'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#javafx.css.StyleConverter'/>
    <use x='52.500'
         y='654.000'
         xlink:href='#org.tquadrat.foundation.fx.css.TimeZoneConverter'/>
</svg>